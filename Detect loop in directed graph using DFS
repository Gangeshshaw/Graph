//Submitted at GFG

bool dfs(int index,int V,vector<bool>&vis, vector<int> adj[],vector<bool>&stk)
    {
        //loop found, last one pointing to a node in the call stack
        if(stk[index] == 1) return 1;
        
        //return if already visited
        if(vis[index]) return 0;
        
        vis[index] = 1;
        
        stk[index] = 1;
        
        for(int i = 0;i < adj[index].size() ;i++)
        {
            int ele = adj[index][i];
            if(dfs(ele,V,vis,adj,stk))
                return 1;
        }
        stk[index] = 0;
        return 0;
    }
    
    bool isCyclic(int V, vector<int> adj[]) {
        // using DFS
        
        vector<bool>vis(V,0);
        vector<bool>stk(V,0);
        for(int i=0;i<V;i++)
        {
            if(!vis[i])
                if(dfs(i,V,vis,adj,stk))
                    return 1;
        }
        return 0;
    }
