public:
	//Function to find the shortest distance of all the vertices
    //from the source vertex S.
    vector <int> dijkstra(int V, vector<vector<int>> adj[], int S)
    {
        // using normal queue
        vector<int>dist(V,INT_MAX);
        dist[S] = 0;
        queue<pair<int,int>>q;//wt,node from s
        q.push({0,S});
        while(!q.empty())
        {
            pair<int,int> frnt = q.front();
            //dist to curr node
            int temp_dis = frnt.first;
            //curr node
            int temp_node = frnt.second;
            
            q.pop();
            for(int i=0;i<adj[temp_node].size();i++)
            {
                int next_node = adj[temp_node][i][0];
                int next_node_dist = adj[temp_node][i][1];
                
                if(dist[next_node]>dist[temp_node]+next_node_dist)
                {
                    dist[next_node] = dist[temp_node]+next_node_dist;
                    q.push({dist[next_node],next_node});
                }
            }
        }
        return dist;
    }
