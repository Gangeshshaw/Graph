class Solution {
  public:
    /*  Function to implement Bellman Ford
    *   edges: vector of vectors which represents the graph
    *   S: source vertex to start traversing graph with
    *   V: number of vertices
    */
    vector<int> bellman_ford(int V, vector<vector<int>>& edges, int S) {
        // Code here
        
        vector<int> dist(V,100000000);
        dist[S] = 0;
        
        for(int i=1;i<V;i++)
        {
            for(int j=0;j<edges.size();j++)
            {
                int temp_src = edges[j][0];
                int temp_dest = edges[j][1];
                int temp_wt = edges[j][2];
                
                if( (dist[temp_dest] > dist[temp_src] + temp_wt) && (dist[temp_src] != 100000000) )
                    dist[temp_dest] = dist[temp_src] + temp_wt;
            }
        }
        
        for(int j=0;j<edges.size();j++)
        {
            int temp_src = edges[j][0];
            int temp_dest = edges[j][1];
            int temp_wt = edges[j][2];
            
            if( (dist[temp_dest] > dist[temp_src] + temp_wt) && (dist[temp_src] != 100000000))
            {
                vector<int> ans(1,-1);
                return ans;
            }
        }
        return dist;
    }
};
