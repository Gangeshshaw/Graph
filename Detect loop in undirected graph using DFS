// Function to detect cycle in an undirected graph.
    
    bool dfs(int V,int index,int parent, vector<int> adj[], vector<int> &vis)
    {
        if(vis[index]) return 1;
        
        vis[index] = 1;
        
        for(int i=0;i<adj[index].size();i++)
        {
            if(parent != adj[index][i])
            {
                if(dfs(V,adj[index][i],index,adj,vis))
                    return 1;
            }
        }
        return 0;
    }
    
    bool isCycle(int V, vector<int> adj[]) {
        // using dfs
        vector<int> vis(V,0);
        
        for(int i=0;i<V;i++)
        {
            if(vis[i] == 0)
                if(dfs(V,i,-1,adj,vis))
                return 1;
        }
        return 0;
    }
